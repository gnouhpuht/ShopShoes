apply plugin: 'com.android.library'

android {
    compileSdkVersion project.compileSdkVersion as int

    defaultConfig {
        minSdkVersion project.minSdkVersion as int
        targetSdkVersion project.targetSdkVersion as int
        versionCode 1
        versionName "1.0"
        consumerProguardFiles 'proguard-rules.pro'

    }

    buildTypes {
        release {
            debuggable false
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0-alpha06'
//    api "com.android.support:design:${supportLibraryVersion}"
//    api "com.android.support:cardview-v7:${supportLibraryVersion}"
//    api "com.android.support:recyclerview-v7:${supportLibraryVersion}"
    api "com.jakewharton:butterknife:${butterKnifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"
    api "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    api "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    api "com.squareup.okhttp3:logging-interceptor:${okhttpLoggingInterceptorVersion}"
    api "com.github.bumptech.glide:glide:${glideVersion}"
    api 'com.squareup.picasso:picasso:2.71828'
    api "com.google.guava:guava:${guavaVersion}"
    api "org.greenrobot:eventbus:${eventbusVersion}"
    api 'org.apache.commons:commons-lang3:3.9'
    api "com.android.support:support-compat:${supportLibraryVersion}"
    api 'com.daimajia.easing:library:2.0@aar'
    api 'com.daimajia.androidanimations:library:2.3@aar'

    api project(path: ':Kprogresshud')
    api project(path: ':GhtkUI')
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}